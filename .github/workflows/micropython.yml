name: MicroPython

on:
  push:
  pull_request:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{matrix.name}}
    strategy:
      matrix:
        include:
          - os: ubuntu-20.04
            name: Linux
            cache-key: linux
            cmake-args: '-DPICO_SDK_PATH=$GITHUB_WORKSPACE/pico-sdk'
            apt-packages: clang-tidy gcc-arm-none-eabi libnewlib-arm-none-eabi libstdc++-arm-none-eabi-newlib

    runs-on: ${{matrix.os}}

    env:
      PICO_SDK_PATH: $GITHUB_WORKSPACE/libs/pico-sdk
      USER_C_MODULES: $GITHUB_WORKSPACE/pimoroni-pico/micropython/modules

    steps:
    # Check out MicroPython
    - name: Checkout MicroPython
      uses: actions/checkout@v2
      with:
        repository: pimoroni/micropython
        ref: usermod-rescue
        submodules: true

    - uses: actions/checkout@v2
      with:
        path: pimoroni-pico

    # Linux deps
    - name: Install deps
      if: runner.os == 'Linux'
      run: |
        sudo apt update && sudo apt install ${{matrix.apt-packages}}

    - name: Fetch Pico SDK submodules
      shell: bash
      working-directory: ${{env.PICO_SDK_PATH}}
      run: git submodule update --init

    - name: Build mpy-cross
      shell: bash
      working-directory: mpy-cross
      run: make

    - name: Build MicroPython
      shell: bash
      working-directory: ports/rp2
      run: make USER_C_MODULES=$USER_C_MODULES -j2